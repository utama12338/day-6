generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int                @id @default(autoincrement())
  email       String             @unique
  firstName   String
  lastName    String
  social      Json?
  courses     CourseEnrollment[]
  testsGraded TestResult[]       @relation("graded")
  testResults TestResult[]       @relation("results")
}

model Course {
  id            Int                @id @default(autoincrement())
  name          String
  courseDetails String?
  members       CourseEnrollment[]
  tests         Test[]
}

model CourseEnrollment {
  createdAt DateTime @default(now())
  role      UserRole
  userId    Int
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@id([userId, courseId])
}

model Test {
  id          Int          @id @default(autoincrement())
  updatedAt   DateTime     @updatedAt
  name        String
  date        DateTime
  courseId    Int
  course      Course       @relation(fields: [courseId], references: [id])
  testResults TestResult[]
}

model TestResult {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  result    Int
  studentId Int
  graderId  Int
  testId    Int
  gradedBy  User     @relation("graded", fields: [graderId], references: [id])
  student   User     @relation("results", fields: [studentId], references: [id])
  test      Test     @relation(fields: [testId], references: [id])
}

enum UserRole {
  STUDENT
  TEACHER
}
